[{"path":"http://cpf.arturhgq.com/LICENSE.html","id":null,"dir":"","previous_headings":"","what":"MIT License","title":"MIT License","text":"Copyright (c) 2022 cpf authors Permission hereby granted, free charge, person obtaining copy software associated documentation files (“Software”), deal Software without restriction, including without limitation rights use, copy, modify, merge, publish, distribute, sublicense, /sell copies Software, permit persons Software furnished , subject following conditions: copyright notice permission notice shall included copies substantial portions Software. SOFTWARE PROVIDED “”, WITHOUT WARRANTY KIND, EXPRESS IMPLIED, INCLUDING LIMITED WARRANTIES MERCHANTABILITY, FITNESS PARTICULAR PURPOSE NONINFRINGEMENT. EVENT SHALL AUTHORS COPYRIGHT HOLDERS LIABLE CLAIM, DAMAGES LIABILITY, WHETHER ACTION CONTRACT, TORT OTHERWISE, ARISING , CONNECTION SOFTWARE USE DEALINGS SOFTWARE.","code":""},{"path":"http://cpf.arturhgq.com/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Artur Quirino. Author, maintainer.","code":""},{"path":"http://cpf.arturhgq.com/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Quirino (2022). cpf: Tools handling cpf data. R package version 0.0.1, https://github.com/arturhgq/cpf.","code":"@Manual{,   title = {cpf: Tools for handling cpf data},   author = {Artur Quirino},   year = {2022},   note = {R package version 0.0.1},   url = {https://github.com/arturhgq/cpf}, }"},{"path":"http://cpf.arturhgq.com/index.html","id":"cpf","dir":"","previous_headings":"","what":"Tools for handling cpf data","title":"Tools for handling cpf data","text":"goal cpf provide useful tools cpfs cleaning validation.","code":""},{"path":"http://cpf.arturhgq.com/index.html","id":"installation","dir":"","previous_headings":"","what":"Installation","title":"Tools for handling cpf data","text":"can install development version cpf like :","code":"remotes::install_github(\"arturhgq/cpf\")"},{"path":"http://cpf.arturhgq.com/index.html","id":"disclaimer","dir":"","previous_headings":"","what":"Disclaimer","title":"Tools for handling cpf data","text":"Remember consider “general Law Data Protection” (LGPD), 13.709/2018, using package. authors responsible misuse tools.","code":""},{"path":"http://cpf.arturhgq.com/reference/add_digits.html","id":null,"dir":"Reference","previous_headings":"","what":"Add leading zeros in cpfs — add_digits","title":"Add leading zeros in cpfs — add_digits","text":"function adds leading zeros cpfs","code":""},{"path":"http://cpf.arturhgq.com/reference/add_digits.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add leading zeros in cpfs — add_digits","text":"","code":"add_digits(.cpf)"},{"path":"http://cpf.arturhgq.com/reference/add_digits.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add leading zeros in cpfs — add_digits","text":".cpf cpfs","code":""},{"path":"http://cpf.arturhgq.com/reference/add_digits.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Add leading zeros in cpfs — add_digits","text":"","code":"add_digits(\"22344533\") #> [1] \"00022344533\""},{"path":"http://cpf.arturhgq.com/reference/cpf-package.html","id":null,"dir":"Reference","previous_headings":"","what":"cpf: Tools for handling cpf data — cpf-package","title":"cpf: Tools for handling cpf data — cpf-package","text":"package provides tools handling cpf data.","code":""},{"path":[]},{"path":"http://cpf.arturhgq.com/reference/cpf-package.html","id":"author","dir":"Reference","previous_headings":"","what":"Author","title":"cpf: Tools for handling cpf data — cpf-package","text":"Maintainer: Artur Quirino contact.last@arturhgq.com (ORCID)","code":""},{"path":"http://cpf.arturhgq.com/reference/fix_cpf.html","id":null,"dir":"Reference","previous_headings":"","what":"Make cpf strings consistent across different patterns — fix_cpf","title":"Make cpf strings consistent across different patterns — fix_cpf","text":"function makes cpf strings consistent across different patterns","code":""},{"path":"http://cpf.arturhgq.com/reference/fix_cpf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Make cpf strings consistent across different patterns — fix_cpf","text":"","code":"fix_cpf(.cpf)"},{"path":"http://cpf.arturhgq.com/reference/fix_cpf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Make cpf strings consistent across different patterns — fix_cpf","text":".cpf cpf string","code":""},{"path":"http://cpf.arturhgq.com/reference/fix_cpf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Make cpf strings consistent across different patterns — fix_cpf","text":"","code":"fake_cpf <- c(    \"111,232-123.23\",    \"11122233323\",    \"234..222--454,,00\"  )  fix_cpf(fake_cpf) #> [1] \"111.232.123-23\" \"111.222.333-23\" \"234.222.454-00\""},{"path":"http://cpf.arturhgq.com/reference/validate_cpf.html","id":null,"dir":"Reference","previous_headings":"","what":"Validate cpf — validate_cpf","title":"Validate cpf — validate_cpf","text":"function validates cpfs calculating check digits","code":""},{"path":"http://cpf.arturhgq.com/reference/validate_cpf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Validate cpf — validate_cpf","text":"","code":"validate_cpf(.data, .cpf, .fix_cpf = TRUE, .clear_steps = TRUE)"},{"path":"http://cpf.arturhgq.com/reference/validate_cpf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Validate cpf — validate_cpf","text":".data data frame .cpf cpf variable .fix_cpf fix_cpf() .clear_steps delete variables used validate cpfs","code":""},{"path":"http://cpf.arturhgq.com/reference/validate_cpf.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Validate cpf — validate_cpf","text":"","code":"data.frame(  cpf = c(    \"22233344\",    \"423.643.534-29\",    \"458.613.523-23\",    13434563434,    NA    )  ) -> data  validate_cpf(data, cpf) #> # A tibble: 5 × 3 #>   cpf            cpf_id cpf_check #>   <chr>           <int> <chr>     #> 1 000.222.333-44      1 invalid   #> 2 423.643.534-29      2 invalid   #> 3 458.613.523-23      3 invalid   #> 4 134.345.634-34      4 invalid   #> 5 NA                  5 unknown"}]
